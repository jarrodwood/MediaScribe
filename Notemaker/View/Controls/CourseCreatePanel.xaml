<UserControl x:Class="JayDev.Notemaker.View.Controls.CourseCreatePanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"
             xmlns:notemakerControl="clr-namespace:JayDev.Notemaker.View.Controls"
             xmlns:notemakerCommon="clr-namespace:JayDev.Notemaker.Common"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:cmd="clr-namespace:GalaSoft.MvvmLight.Command;assembly=GalaSoft.MvvmLight.Extras.WPF4"         
             xmlns:effect="clr-namespace:GrayscaleEffect;assembly=GrayscaleEffect"
             x:Name="CourseCreatePanelName"
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <Style x:Key="HeaderFont" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style x:Key="BoldFont" TargetType="{x:Type TextBlock}">
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
    </UserControl.Resources>
    <StackPanel>
        <StackPanel Orientation="Horizontal">
            <TextBlock Style="{StaticResource HeaderFont}" xml:space="preserve">Create a new course: </TextBlock>
        <TextBox HorizontalAlignment="Center" VerticalAlignment="Center" Width="300" Text="{Binding ElementName=CourseCreatePanelName, Path=CourseName}">
            <notemakerCommon:WatermarkService.Watermark>
                <TextBlock>Course name...</TextBlock>
            </notemakerCommon:WatermarkService.Watermark>
        </TextBox>
        </StackPanel>
        <DockPanel Margin="0 15 0 0">
            <DockPanel DockPanel.Dock="Top">
                <!-- make the border the same colour as the grid's border... we want to make it look like an extension of the grid. -->
                <Border DockPanel.Dock="Bottom" BorderThickness="1 0 1 1" BorderBrush="#A3AEB9" Background="#DDD">
                    <StackPanel MinHeight="30">
                        <TextBlock Margin="0 5 0 0"  Text="Please add some tracks!" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" HorizontalAlignment="Center" MinHeight="30">

                            <notemakerControl:ImageButton MySource="/Notemaker;component/Images/list-add-7.png" Height="24" Width="24" Command="{Binding ElementName=CourseCreatePanelName, Path=AddTracksCommand}" />

                            <notemakerControl:ImageButton MySource="/Notemaker;component/Images/list-remove-6.png" Height="24" Width="24" Command="{Binding ElementName=CourseCreatePanelName, Path=DeleteTracksCommand}" CommandParameter="{Binding ElementName=CourseCreatePanelName, Path=DeleteTracksCommandParameter}" />

                        </StackPanel>
                    </StackPanel>
                </Border>
                <DataGrid VerticalAlignment="Top" AutoGenerateColumns="False"  Name="trackGrid" HeadersVisibility="All" CanUserAddRows="False"
                           CanUserSortColumns="False" CanUserReorderColumns="False" CanUserResizeRows="False" ItemsSource="{Binding ElementName=CourseCreatePanel, Path=CourseTracks, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, NotifyOnSourceUpdated=True}">
                    <!--<i:Interaction.Triggers>
                                        <i:EventTrigger EventName="MouseDoubleClick">
                                            <cmd:EventToCommand Command="{Binding SelectTrackCommand,Mode=OneWay}"
                                            CommandParameter="{Binding SelectedItem, ElementName=trackGrid, Mode=OneWay}"
                                            MustToggleIsEnabledValue="True" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>-->
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name"
                                            Width="*"
                                           Binding="{Binding StringDisplayValue}" 
                                           IsReadOnly="True"/>
                        <DataGridTextColumn Header="Length"
                                            Width="55"
                                           Binding="{Binding Length}" 
                                           IsReadOnly="True"/>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
            <!--Empty content control, which 'fills' the dockpanel. As the grid grows, this will shrink away to nothing... and as the grid continues to grow, it'll get scrollbars.-->
            <ContentControl>
            </ContentControl>
        </DockPanel>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 15 0 0">
            <Button Padding="5 1">Save</Button>
            <Button Margin="10 0 0 0" Padding="5 1">Delete</Button>
        </StackPanel>
    </StackPanel>
</UserControl>
